<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.dowloyalty.dao.PointsLevelDao">
 	<select id="findLvNameByRetailerId" resultType="String">
 		select
 			Name
		from pointslevel
		where
 			(
 			select
 				sum(Points)
 			from salerecord
 			where salerecord.RetailerID = #{RetailerID}
 			) >= Points 
 		or
 			(
 			select
 				sum(Points)
 			from salerecord
 			where salerecord.RetailerID = #{RetailerID}
 			) &lt; 0
 		and ProjectID = #{ProjectID}
 		and IsActive = 1
		order by Points asc
		limit 0,1
 	</select>
 	
 	<select id="findNexLvPByRetailerId" resultType="com.dowloyalty.entity.PointsLevel">
 		select
 			Id,ProjectID,Name,Points,IsActive
		from pointslevel
		where
 			(
 			select
 				sum(Points)
 			from salerecord
 			where
 			salerecord.RetailerID = #{RetailerID}
 			) &lt;= Points
 		and ProjectID = #{ProjectID}
 		and IsActive = 1
		order by Points asc
		limit 0,1
 	</select>
 	
 	<resultMap type="com.dowloyalty.pojo.RetailerAccInfo" id="accInfoMap">
 		<result column="retailerName" property="reName"/>
 		<result column="retailerId" property="reId"/>
 		<result column="provinceName" property="provinceName"/>
 		<result column="totalPoints" property="totalPoints"/>
 		<result column="remainPoints" property="remainPoints"/>
 	</resultMap>
 	
 	<select id="findAccInfoByRetailerId" resultMap="accInfoMap">
	select
	retailer.ChineseName retailerName,
	retailer.ID retailerId,
	province.Name provinceName,
	sum(salerecord.Points) totalPoints,
	sum(salerecord.Points)+sumEgPoints remainPoints
	from
	retailer
	left join province
	on retailer.ProvinceID = province.ID
	left join salerecord
	on retailer.ID = salerecord.RetailerID
	,
	(
	select
		sum(ifnull(ExchangePoints,0)) sumEgPoints
	from
	exchangerecord
	where
	RetailerID = #{RetailerID}
	)EgPoints
	where
	retailer.ID = #{RetailerID}
	</select>
	
	<resultMap type="com.dowloyalty.pojo.RetailerAccInfo" id="furAccMap">
 		<result column="nextRank" property="nextRank"/>
 		<result column="curRank" property="curRank"/>
 		<result column="remainPoints" property="toUpPersonRemainPoints"/>
 	</resultMap>
	
	<select id="findFurAccByRetailerId" resultMap="furAccMap">
	select
	count(allSumPoints) nextRank,
	count(allSumPoints)+1 curRank,
	min(allSumPoints)-
	oneSum.oneSumPoints
	remainPoints
	from 
	(
			select
					sum(Points) oneSumPoints
				from salerecord
				where salerecord.RetailerID = #{RetailerID}
		) oneSum,
	(
		select
 				sum(Points) allSumPoints,ProjectID
 			from salerecord
 			group by RetailerID
			having
			allSumPoints > 
		(
			select
					sum(Points) oneSumPoints
				from salerecord
				where salerecord.RetailerID = #{RetailerID}
		)
	) allSum
	where
		allSum.ProjectID = #{ProjectID}
	</select>
	
	<select id="getRankPercent" resultType="String">
	select 
	count(RetailerID)/((
	select
		count(ID)
		from
		retailer
		where 
		ProvinceID = #{ProvinceID}
		and 
		IsActive = 1
))*100+'%'
	from 
	(
	select
		sum(salerecord.Points) allPoint,salerecord.RetailerID
		from 
		project
		left join
		salerecord
		on
		project.ID = salerecord.ProjectID
		left join 
		retailer
		on
		retailer.ID = salerecord.RetailerID
		where
		project.ProvinceID = #{ProvinceID}
		and
		project.IsActive = 1
		group by salerecord.RetailerID
	) allPoints,
	(
	select
		sum(salerecord.Points) onePoint
		from 
		project
		left join
		salerecord
		on
		project.ID = salerecord.ProjectID
		left join 
		retailer
		on
		retailer.ID = salerecord.RetailerID
		where
		project.ProvinceID = #{ProvinceID}
		and
		project.IsActive = 1
		and 
		retailer.ID = #{RetailerID}
	) onePoints
	where 
allPoints.allPoint > onePoints.onePoint
	
	</select>
 </mapper>