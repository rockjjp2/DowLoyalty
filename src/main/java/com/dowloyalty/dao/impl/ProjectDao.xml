<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.dowloyalty.dao.ProjectDao">
 	
 	<resultMap type="com.dowloyalty.entity.Project" id="projectMap">
 	<result column="projectID" property="id"/>
 	<result column="isVisible" property="isVisible"/>
 	</resultMap>
 	
 	<resultMap type="com.dowloyalty.entity.Project" id="projectBase64Map">
 	<result column="projectID" property="id"/>
 	<result column="projectName" property="name"/>
 	<result column="provinceID" property="provinceID"/>
 	<result column="placardPath" property="placardPath"/>
 	<result column="backgroundPath" property="backgroundPath"/>
 	<result column="assistantID" property="assistantID"/>
 	<result column="startDate" property="startDate"/>
 	<result column="endDate" property="endDate"/>
 	<result column="adminID" property="adminID"/>
 	<result column="description" property="description"/>
 	<result column="isActive" property="isActive"/>
 	<result column="isVisible" property="isVisible"/>
 	<result column="haveFarmer" property="haveFarmer"/>
 	</resultMap>
 	
 	<select id="findActiveByRid" parameterType="int" resultMap="projectMap">
 		select
 			project.ID projectID,
 			project.IsVisible isVisible,
 			project.PlacardPath placardPath
 		from
 			rprojectretailer
 		left join
 			project
 		on
 			rprojectretailer.ProjectID = project.ID
 		where
 			RetailerID = #{RetailerID}
 		and
 			rprojectretailer.ProjectID =
		(
			select
				project.ID
			from 
				project	
			left join 
			rprojectretailer
			on 
			project.ID = rprojectretailer.ProjectID
			where
				rprojectretailer.RetailerID = #{RetailerID}
			and
				project.StartDate &lt;= current_date()
			and
				project.EndDate >= current_date()
			and 
				project.IsActive = 1
			and 
				rprojectretailer.IsActive = 1
			order by project.StartDate desc 
				limit 0,1
		)
 		and
 			project.IsActive = 1
 		and
 			rprojectretailer.IsActive = 1
 		and
 			project.IsVisible = 1
 	</select>
 	<select id="findProjectByRetailerId" parameterType="int" resultMap="projectBase64Map">
 	select 
      project.ID projectID,
      project.Name projectName,
      project.ProvinceID provinceID,
      project.PlacardPath placardPath,
      project.BackgroundPath backgroundPath,
      project.AssistantID assistantID,
      project.StartDate startDate,
      project.EndDate endDate,
      project.AdminID adminID,
      project.IsVisible isVisible,
      project.IsActive isActive,
      project.HaveFarmer haveFarmer,
      project.Description description
 	FROM
      rprojectretailer,
      project
 	WHERE
      rprojectretailer.ProjectID = project.ID
    AND
      RetailerID = #{value}
 	AND
      project.IsActive = 1
    AND
      rprojectretailer.IsActive = 1
    ORDER BY project.StartDate DESC
 	</select>
 	<select id="findProjectByPromoterId" parameterType="int" resultMap="projectBase64Map">
 	SELECT
      project.ID projectID,
      project.Name projectName,
      project.ProvinceID provinceID,
      project.PlacardPath placardPath,
      project.BackgroundPath backgroundPath,
      project.AssistantID assistantID,
      project.StartDate startDate,
      project.EndDate endDate,
      project.AdminID adminID,
      project.IsVisible isVisible,
      project.IsActive isActive,
      project.HaveFarmer haveFarmer,
      project.Description description
    FROM
      project,rprojectpromoter
	WHERE
      project.ID=rprojectpromoter.ProjectID
    AND
      rprojectpromoter.PromoterID=#{value}
	AND
      project.IsActive=1
    AND
      rprojectpromoter.IsActive=1
    ORDER BY project.StartDate DESC
    limit 1
 	</select>
 	<select id="findActiveProjectByPromoterId" parameterType="int" resultMap="projectBase64Map">
 	SELECT
 	  project.ID projectID,
      project.Name projectName,
      project.ProvinceID provinceID,
      project.PlacardPath placardPath,
      project.BackgroundPath backgroundPath,
      project.AssistantID assistantID,
      project.StartDate startDate,
      project.EndDate endDate,
      project.AdminID adminID,
      project.IsVisible isVisible,
      project.IsActive isActive,
      project.HaveFarmer haveFarmer,
      project.Description description
    FROM
      project,rprojectpromoter
	WHERE
      project.ID=rprojectpromoter.ProjectID
    AND
      rprojectpromoter.PromoterID=#{value}
	AND
      project.IsActive=1
    AND
      rprojectpromoter.IsActive=1
	AND
      project.StartDate &lt;= current_date()
	AND
      project.EndDate >= current_date()
    limit 1
 	</select>
 	
 	<select id="findProjectByProjectId" parameterType="int" resultMap="projectBase64Map">
 	select
 	  project.ID projectID,
      project.Name projectName,
      project.ProvinceID provinceID,
      project.PlacardPath placardPath,
      project.BackgroundPath backgroundPath,
      project.AssistantID assistantID,
      project.StartDate startDate,
      project.EndDate endDate,
      project.AdminID adminID,
      project.IsVisible isVisible,
      project.IsActive isActive,
      project.HaveFarmer haveFarmer,
      project.Description description
    from
      Project
    where
      IsActive = 1
    and
      ID=#{projectId}
 	</select>
 	<select id="findProjectByAssistantId" parameterType="int" resultMap="projectBase64Map">
 	select
 	  project.ID projectID,
      project.Name projectName,
      project.ProvinceID provinceID,
      project.PlacardPath placardPath,
      project.BackgroundPath backgroundPath,
      project.AssistantID assistantID,
      project.StartDate startDate,
      project.EndDate endDate,
      project.AdminID adminID,
      project.IsVisible isVisible,
      project.IsActive isActive,
      project.HaveFarmer haveFarmer,
      project.Description description
    from
      Project
    where
      AssistantID=#{value}
 	</select>
 	
 	<update id="update" parameterType="com.dowloyalty.entity.Project">
 		update
 		    Project
 		set
 		    Name = #{name},
 		    ProvinceID = #{provinceID},
 		    PlacardPath = #{placardPath},
 		    BackgroundPath = #{backgroundPath},
 		<if test="assistantID == 0">
 			AssistantID = null,
 		</if>
 		<if test="assistantID != 0">
 		    AssistantID = #{assistantID},
 		</if>
 		    StartDate = #{startDate},
 		    EndDate = #{endDate},
 		    AdminID = #{adminID},
 		    Description = #{description},
 		    IsVisible = #{isVisible},
 		    IsActive = #{isActive},
 		    HaveFarmer = #{haveFarmer}
 		where
 		    ID = #{id}
 	</update>
 	
 	<select id="findProjectByProvinceIdAndName" resultMap="projectBase64Map">
 	select
 	  project.ID projectID,
      project.Name projectName,
      project.ProvinceID provinceID,
      project.PlacardPath placardPath,
      project.BackgroundPath backgroundPath,
      project.AssistantID assistantID,
      project.StartDate startDate,
      project.EndDate endDate,
      project.AdminID adminID,
      project.isVisible isVisible,
      project.IsActive isActive,
      project.HaveFarmer haveFarmer,
      project.Description description
    from
      project
    where
      ProvinceID = #{ProvinceID}
    and
      Name = #{Name}
    and
      IsActive = 1
 	</select>
 	
 	<insert id="save" parameterType="com.dowloyalty.entity.Project">
 	insert into project
 	(
 	  Name,ProvinceID,PlacardPath,BackgroundPath,
 	  AssistantID,StartDate,EndDate,AdminID,
 	  isVisible,IsActive,Description,HaveFarmer
 	)
 	values
 	(
 	  #{name},#{provinceID},#{placardPath},#{backgroundPath},
 	  null,#{startDate},#{endDate},#{adminID},
 	  #{isVisible},#{isActive},#{description},#{haveFarmer}
 	)
 	</insert>
 	
 	<select id="findAllActiveProjects" resultMap="projectBase64Map">
 	select
 	  project.ID projectID,
      project.Name projectName,
      project.ProvinceID provinceID,
      project.PlacardPath placardPath,
      project.BackgroundPath backgroundPath,
      project.AssistantID assistantID,
      project.StartDate startDate,
      project.EndDate endDate,
      project.AdminID adminID,
      project.isVisible isVisible,
      project.IsActive isActive,
      project.HaveFarmer haveFarmer,
      project.Description description
    from
      project
    where
      IsActive = 1
 	</select>
 	
 	<!--  -->
 	<select id="findByFarmerId" parameterType="int" resultMap="projectBase64Map">
 		select
 			project.ID projectID,
 			project.IsVisible isVisible,
 			project.PlacardPath placardPath
 		from
 			rprojectfarmer
 		left join
 			project
 		on
 			rprojectfarmer.ProjectID = project.ID
 		where
 			FarmerID = #{FarmerID}
 		and
 			rprojectfarmer.ProjectID =
		(
			select
				project.ID
			from 
				project	
			left join 
			rprojectfarmer
			on 
			project.ID = rprojectfarmer.ProjectID
			where
				rprojectfarmer.FarmerID = #{FarmerID}
			and
				project.StartDate &lt;= current_date()
			and
				project.EndDate >= current_date()
			and 
				project.IsActive = 1
			and 
				rprojectfarmer.IsActive = 1
			order by project.StartDate desc 
				limit 0,1
		)
 		and
 			project.IsActive = 1
 		and
 			rprojectfarmer.IsActive = 1
 		and
 			project.IsVisible = 1
 		and
 			project.HaveFarmer = 1
 	</select>
 	
 	<select id="findAllHaveFarmerProjects" resultMap="projectBase64Map">
 		select
 			project.ID projectID,
 			project.Name projectName
 		from
 			project
 		where
 			project.IsActive = 1
 		and
 			project.HaveFarmer = 1
 	</select>
 	
 	<select id="findActiveAndFutureByProvinceId" parameterType="int" resultMap="projectBase64Map">
 		select
 			project.ID projectID
 		from
 			project
 		where
 			project.IsActive = 1
 		and
 			project.EndDate >= current_date()
 		and
 			project.HaveFarmer = 1
 		and
 			project.ProvinceID = #{ProvinceID}
 	</select>
 	
 	<select id="findLastestByProvinceId" parameterType="int" resultMap="projectBase64Map">
 		select
 			project.ID projectID,
 			project.EndDate endDate
 		from
 			project
 		where
 			project.IsActive = 1
 		and
 			ProvinceID = #{ProvinceID}
 		order by EndDate desc
 		limit 1
 	</select>
 	
 </mapper>